{"mappings":"AAAA,IAAI;AACJ,IAAI,iBAAiB;AACrB,IAAI,WAAW;AACf,IAAI,YAAY;AAChB,IAAI,gBAAgB;AAEpB,SAAS;IACP,MAAM,SAAS,SAAS,cAAc,CAAC;IAEvC,IAAI,CAAC;QACH,wBAAwB;QACxB,IAAI,kBAAkB,GAAG;YACvB,cAAc;YACd,MAAM,WAAW,SAAS,SAAS,cAAc,CAAC,eAAe,KAAK,IAAI;YAC1E,MAAM,YAAY,SAAS,SAAS,cAAc,CAAC,gBAAgB,KAAK,IAAI;YAE5E,IAAI,MAAM,aAAa,MAAM,cAAc,YAAY,KAAK,aAAa,GAAG;gBAC1E,MAAM;gBACN;YACF;YAGA,WAAW;YACX,YAAY;YACZ,OAAO,WAAW,GAAG;YACrB,WAAW,UAAU,WAAW;QAClC,OAAO;YACL,WAAW;YACX,WAAW;YACX,YAAY;YACZ,OAAO,WAAW,GAAG;YACrB,WAAW,gBAAgB,GAAG;QAChC;WACK;QACL,UAAU;QACV,cAAc;QACd,WAAW;QACX,YAAY;QACZ,aAAa;QACb,OAAO,WAAW,GAAG;IACvB;AACF;AAEA,SAAS,WAAW,QAAQ,EAAE,QAAQ,EAAE,SAAS;IAC/C,gBAAgB;IAChB,aAAa,YAAY,eAAe;IAExC,YAAY,YAAY;QACtB,IAAI,CAAC,UAAU;YACb,cAAc;YACd,iBAAiB;YAEjB,IAAI,aAAa,GAAG;gBAClB,MAAM,QAAQ,SAAS,cAAc,CAAC;gBACtC,MAAM,WAAW,GAAG;gBACpB,MAAM,IAAI,GAAG,KAAK,CAAC,CAAA,MAAO,QAAQ,IAAI,CAAC,sBAAsB;YAC/D;YAEA;YAEA,IAAI,WAAW,GAAG;gBAChB,cAAc;gBACd,WAAW;gBACX,YAAY;gBACZ,SAAS,cAAc,CAAC,iBAAiB,WAAW,GAAG;gBAEvD,IAAI,WACF,WAAW,UAAU,WAAW,UAAU;qBACrC;oBACL,MAAM,WAAW,SAAS,SAAS,cAAc,CAAC,eAAe,KAAK,IAAI;oBAC1E,MAAM,YAAY,SAAS,SAAS,cAAc,CAAC,gBAAgB,KAAK,IAAI;oBAC5E,WAAW,UAAU,WAAW;gBAClC;YACF;QACF;IACF,GAAG;AACL;AAEA,SAAS,cAAc,OAAO;IAC5B,MAAM,OAAO,KAAK,KAAK,CAAC,UAAU;IAClC,MAAM,OAAO,UAAU;IACvB,SAAS,cAAc,CAAC,SAAS,WAAW,GAC1C,GAAG,OAAO,MAAM,QAAQ,CAAC,GAAG,KAAK,CAAC,EAAE,OAAO,MAAM,QAAQ,CAAC,GAAG,MAAM;AACvE;AAEA,SAAS,aAAa,IAAI;IACxB,SAAS,cAAc,CAAC,UAAU,WAAW,GAAG;AAClD","sources":["frontend/script.js"],"sourcesContent":["let countdown;\r\nlet timeLeftGlobal = 0;\r\nlet isPaused = false;\r\nlet isRunning = false;\r\nlet isWorkSession = true;\r\n\r\nfunction togglePomodoro() {\r\n  const button = document.getElementById(\"startPauseBtn\");\r\n\r\n  if (!isRunning) {\r\n    // First start or resume\r\n    if (timeLeftGlobal <= 0) {\r\n      // Fresh start\r\n      const workTime = parseInt(document.getElementById(\"workMinutes\").value) * 60;\r\n      const breakTime = parseInt(document.getElementById(\"breakMinutes\").value) * 60;\r\n\r\n      if (isNaN(workTime) || isNaN(breakTime) || workTime <= 0 || breakTime <= 0) {\r\n        alert(\"Please enter valid minutes for both work and break.\");\r\n        return;\r\n      }\r\n\r\n\r\n      isPaused = false;\r\n      isRunning = true;\r\n      button.textContent = \"Pause\";\r\n      startTimer(workTime, breakTime, true);\r\n    } else {\r\n      // Resuming\r\n      isPaused = false;\r\n      isRunning = true;\r\n      button.textContent = \"Pause\";\r\n      startTimer(timeLeftGlobal, 0, isWorkSession);\r\n    }\r\n  } else {\r\n    // Pausing\r\n    clearInterval(countdown);\r\n    isPaused = true;\r\n    isRunning = false;\r\n    updateStatus(\"Paused\");\r\n    button.textContent = \"Resume\";\r\n  }\r\n}\r\n\r\nfunction startTimer(timeLeft, nextTime, isWorking) {\r\n  isWorkSession = isWorking;\r\n  updateStatus(isWorking ? \"Work Time!\" : \"Break Time!\");\r\n\r\n  countdown = setInterval(() => {\r\n    if (!isPaused) {\r\n      updateDisplay(timeLeft);\r\n      timeLeftGlobal = timeLeft;\r\n\r\n      if (timeLeft === 1) {\r\n        const audio = document.getElementById(\"PomoVibeNotif\");\r\n        audio.currentTime = 0;\r\n        audio.play().catch(err => console.warn(\"Audio play failed:\", err));\r\n      }\r\n\r\n      timeLeft--;\r\n\r\n      if (timeLeft < 0) {\r\n        clearInterval(countdown);\r\n        isPaused = false;\r\n        isRunning = true;\r\n        document.getElementById(\"startPauseBtn\").textContent = \"Pause\";\r\n\r\n        if (isWorking) {\r\n          startTimer(nextTime, timeLeft + nextTime, false);\r\n        } else {\r\n          const workTime = parseInt(document.getElementById(\"workMinutes\").value) * 60;\r\n          const breakTime = parseInt(document.getElementById(\"breakMinutes\").value) * 60;\r\n          startTimer(workTime, breakTime, true);\r\n        }\r\n      }\r\n    }\r\n  }, 1000);\r\n}\r\n\r\nfunction updateDisplay(seconds) {\r\n  const mins = Math.floor(seconds / 60);\r\n  const secs = seconds % 60;\r\n  document.getElementById(\"timer\").textContent =\r\n    `${String(mins).padStart(2, '0')}:${String(secs).padStart(2, '0')}`;\r\n}\r\n\r\nfunction updateStatus(text) {\r\n  document.getElementById(\"status\").textContent = text;\r\n}\r\n"],"names":[],"version":3,"file":"frontend.0065ee6c.js.map","sourceRoot":"/__parcel_source_root/"}